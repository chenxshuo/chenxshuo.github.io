function generateTestTable(){var t=test_score_table,d='<table class="js-sort-table" id="results">';d+='<tr>\n                  <td class="js-sort-number"><strong>#</strong></td>\n                  <td class="js-sort-number"><strong>Model</strong></td>\n                  <td class="js-sort-number"><strong>Size</strong></td>\n                  <td class="js-sort-number"><strong>Notes</strong></td>\n                  <td class="js-sort-number"><strong>QU(P)</strong></td>\n                  <td class="js-sort-number"><strong>QU(C)</strong></td>\n                  <td class="js-sort-number"><strong>DE(P)</strong></td>\n                  <td class="js-sort-number"><strong>DE(C)</strong></td>\n                  <td class="js-sort-number"><strong>AC(P)</strong></td>\n                  <td class="js-sort-number"><strong>AC(C)</strong></td>\n                  <td class="js-sort-number"><strong>MA(P)</strong></td>\n                  <td class="js-sort-number"><strong>MA(C)</strong></td>\n                  <td class="js-sort-number"><strong>PO(P)</strong></td>\n                  <td class="js-sort-number"><strong>PO(C)</strong></td>\n                  <td class="js-sort-number"><strong>EC(P)</strong></td>\n                  <td class="js-sort-number"><strong>EC(C)</strong></td>\n                  <td class="js-sort-number"><strong>CO(P)</strong></td>\n                  <td class="js-sort-number"><strong>CO(C)</strong></td>\n                  <td class="js-sort-number"><strong><u>AVG(P)</u></strong></td>\n                  <td class="js-sort-number"><strong><u>AVG(C)</u></strong></td>\n              </tr>',d+="<tr>\n              <td>-</td>\n              <td><b>Human Performance</b></td>\n              <td>-</td>\n              <td>Open-book (expert)</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td>-</td>\n              <td><b>92.0</b></td>\n              <td><b>92.0</b></td>\n          </tr>",d+="<tr>\n          <td>-</td>\n          <td><b>Human Performance</b></td>\n          <td>-</td>\n          <td>Open-book (non-expert)</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td>-</td>\n          <td><b>84.0</b></td>\n          <td><b>84.0</b></td>\n      </tr>",d+="<tr>\n      <td>-</td>\n      <td><b>Human Performance</b></td>\n      <td>-</td>\n      <td>Close-book (expert)</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td>-</td>\n      <td><b>73.0</b></td>\n      <td><b>73.0</b></td>\n  </tr>",d+="<tr>\n        <td>-</td>\n        <td><b>Human Performance</b></td>\n        <td>-</td>\n        <td>Close-book (non-expert)</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td>-</td>\n        <td><b>58.0</b></td>\n        <td><b>58.0</b></td>\n    </tr>";for(var n=Object.keys(t),s=0;s<n.length;s++){var r=n[s];console.log(r);var o=t[r];d+="<tr>",d+=`<td>${r}</td>`,d+=`<td><b>${o.Model}</b></td>`,d+=`<td>${o.Size}</td>`,d+=`<td>${o.Notes}</td>`,d+=`<td>${o["QU(P)"].toFixed(1).toString()}</td>`,d+=`<td>${o["QU(C)"].toFixed(1).toString()}</td>`,d+=`<td>${o["DE(P)"].toFixed(1).toString()}</td>`,d+=`<td>${o["DE(C)"].toFixed(1).toString()}</td>`,d+=`<td>${o["AC(P)"].toFixed(1).toString()}</td>`,d+=`<td>${o["AC(C)"].toFixed(1).toString()}</td>`,d+=`<td>${o["MA(P)"].toFixed(1).toString()}</td>`,d+=`<td>${o["MA(C)"].toFixed(1).toString()}</td>`,d+=`<td>${o["PO(P)"].toFixed(1).toString()}</td>`,d+=`<td>${o["PO(C)"].toFixed(1).toString()}</td>`,d+=`<td>${o["EC(P)"].toFixed(1).toString()}</td>`,d+=`<td>${o["EC(C)"].toFixed(1).toString()}</td>`,d+=`<td>${o["CO(P)"].toFixed(1).toString()}</td>`,d+=`<td>${o["CO(C)"].toFixed(1).toString()}</td>`,d+=`<td><b>${o["AVG(P)"].toFixed(1).toString()}</b></td>`,d+=`<td><b>${o["AVG(C)"].toFixed(1).toString()}</b></td>`}d+="</tr>",d+="</table>",document.getElementById("test_leaderboard").innerHTML=d}document.addEventListener("DOMContentLoaded",generateTestTable);